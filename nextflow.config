/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    plant-food-research-open/assemblyqc Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                               = null

    // Validation options
    check_sequence_duplicates           = true

    // General stats options
    assemblathon_stats_n_limit          = 100
    gfastats_skip                       = true

    // NCBI FCS options
    ncbi_fcs_adaptor_skip               = true
    ncbi_fcs_adaptor_empire             = null

    ncbi_fcs_gx_skip                    = true
    ncbi_fcs_gx_tax_id                  = null
    ncbi_fcs_gx_db_path                 = null

    contamination_stops_pipeline        = true

    // BUSCO options
    busco_skip                          = true
    busco_mode                          = null
    busco_lineage_datasets              = null
    busco_download_path                 = null

    // TIDK options
    tidk_skip                           = true
    tidk_repeat_seq                     = null
    tidk_filter_by_size                 = false
    tidk_filter_size_bp                 = 1000000

    // LAI options
    lai_skip                            = true

    // kraken2 options
    kraken2_skip                        = true
    kraken2_db_path                     = null

    // HiC options
    hic                                 = null
    hic_merge_assemblies                = null
    hic_skip_fastp                      = false
    hic_skip_fastqc                     = false
    hic_fastp_ext_args                  = '--qualified_quality_phred 20 --length_required 50'
    hic_samtools_ext_args               = '-F 3852'

    // Synteny options
    synteny_skip                        = true
    synteny_mummer_skip                 = true
    synteny_plotsr_skip                 = true
    synteny_xref_assemblies             = null
    synteny_between_input_assemblies    = true
    synteny_mummer_plot_type            = 'both'
    synteny_mummer_m2m_align            = false
    synteny_mummer_max_gap              = 1000000
    synteny_mummer_min_bundle_size      = 1000000
    synteny_plot_1_vs_all               = false
    synteny_color_by_contig             = true
    synteny_plotsr_seq_label            = 'Chr'
    synteny_plotsr_assembly_order       = null

    // Merqury options
    merqury_skip                        = true
    merqury_kmer_length                 = 21

    // Output options
    outdir                              = null
    email                               = null

    // Boilerplate options
    publish_dir_mode                    = 'copy'
    email_on_fail                       = null
    plaintext_email                     = false
    monochrome_logs                     = false
    hook_url                            = null
    version                             = false

    // Config options
    config_profile_name                 = null
    config_profile_description          = null
    custom_config_version               = 'master'
    custom_config_base                  = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
}

// Max resources
process {
    resourceLimits = [
        cpus: 16,
        memory: '512.GB',
        time: '7.day'
    ]
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        // docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        // docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
        docker.runOptions      = '--platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load plant-food-research-open/assemblyqc custom profiles from different institutions.
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/assemblyqc.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'plant-food-research-open/assemblyqc'
    author          = """Usman Rashid, Ken Smith, Ross Crowhurst, Chen Wu, Marcus Davy"""
    homePage        = 'https://github.com/plant-food-research-open/assemblyqc'
    description     = """A Nextflow pipeline which evaluates assembly quality with multiple QC tools and presents the results in a unified html report."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '2.2.0dev'
    doi             = 'https://doi.org/10.1093/bioinformatics/btae477'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input assemblysheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
    monochromeLogs = params.monochrome_logs
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
