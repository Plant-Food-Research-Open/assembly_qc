{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/plant-food-research-open/assemblyqc/main/nextflow_schema.json",
    "title": "plant-food-research-open/assemblyqc pipeline parameters",
    "description": "A Nextflow pipeline which evaluates assembly quality with multiple QC tools and presents the results in a unified html report.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Input assembly sheet in CSV format",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            },
            "required": ["input", "outdir"]
        },
        "validation_options": {
            "title": "Validation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "check_sequence_duplicates": {
                    "type": "boolean",
                    "default": true,
                    "fa_icon": "fas fa-question-circle",
                    "description": "Check for duplicate sequences in fasta validation"
                }
            }
        },
        "general_stats_options": {
            "title": "General stats options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "assemblathon_stats_n_limit": {
                    "type": "integer",
                    "default": 100,
                    "description": "The number of 'N's for the unknown gap size. NCBI recommendation is 100",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "gfastats_skip": {
                    "type": "boolean",
                    "description": "Skip Gfastats",
                    "default": true,
                    "fa_icon": "fas fa-forward"
                }
            }
        },
        "ncbi_fcs_options": {
            "title": "NCBI FCS options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "ncbi_fcs_adaptor_skip": {
                    "type": "boolean",
                    "description": "Skip NCBI FCS Adaptor checking",
                    "default": true,
                    "fa_icon": "fas fa-forward"
                },
                "ncbi_fcs_adaptor_empire": {
                    "type": "string",
                    "enum": ["euk", "prok"],
                    "description": "Empire for NCBI FCS Adaptor checking: 'euk' for eukaryotes, or 'prok' for prokaryotes",
                    "fa_icon": "fas fa-project-diagram"
                },
                "ncbi_fcs_gx_skip": {
                    "type": "boolean",
                    "description": "Skip NCBI FCS external organism contamination checking",
                    "default": true,
                    "fa_icon": "fas fa-forward"
                },
                "ncbi_fcs_gx_tax_id": {
                    "type": "number",
                    "description": "Tax ID for NCBI FCS GX. See: https://www.ncbi.nlm.nih.gov/taxonomy",
                    "fa_icon": "fab fa-orcid"
                },
                "ncbi_fcs_gx_db_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to NCBI FCS GX database. See: https://github.com/ncbi/fcs/wiki/FCS-GX",
                    "fa_icon": "fas fa-folder-open"
                },
                "contamination_stops_pipeline": {
                    "type": "boolean",
                    "default": true,
                    "fa_icon": "fas fa-hand-paper",
                    "description": "Skip remaining QC steps for an assembly which has adaptor or GX contamination"
                }
            }
        },
        "busco_options": {
            "title": "BUSCO options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "busco_skip": {
                    "type": "boolean",
                    "description": "Skip BUSCO",
                    "default": true,
                    "fa_icon": "fas fa-forward"
                },
                "busco_mode": {
                    "type": "string",
                    "enum": ["genome", "transcriptome", "proteins"],
                    "description": "BUSCO mode: 'genome', 'transcriptome', 'proteins'",
                    "fa_icon": "fas fa-cog"
                },
                "busco_lineage_datasets": {
                    "type": "string",
                    "pattern": "^(\\w+_odb10\\s)*\\w+_odb10$",
                    "description": "BUSCO lineages. It should be provided as a space-separated list of lineages: 'fungi_odb10 microsporidia_odb10'",
                    "fa_icon": "fas fa-clipboard-list"
                },
                "busco_download_path": {
                    "type": "string",
                    "description": "Download path for BUSCO",
                    "format": "directory-path",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "tidk_options": {
            "title": "TIDK options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "tidk_skip": {
                    "type": "boolean",
                    "description": "Skip telomere identification",
                    "default": true,
                    "fa_icon": "fas fa-forward"
                },
                "tidk_repeat_seq": {
                    "type": "string",
                    "description": "Telomere repeat sequence. Typical values for plant: TTTAGGG, fungus, vertebrates: TTAGGG and Insect: TTAGG",
                    "pattern": "^[ACGT]+$",
                    "fa_icon": "fas fa-dna"
                },
                "tidk_filter_by_size": {
                    "type": "boolean",
                    "description": "Filter assembly sequences smaller than the specified length",
                    "fa_icon": "fas fa-question-circle"
                },
                "tidk_filter_size_bp": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "Filter size in base-pairs",
                    "fa_icon": "fas fa-ruler-horizontal"
                }
            }
        },
        "lai_options": {
            "title": "LAI options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "lai_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip LAI estimation",
                    "fa_icon": "fas fa-forward"
                }
            }
        },
        "kraken2_options": {
            "title": "Kraken2 options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "kraken2_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip Kraken2",
                    "fa_icon": "fas fa-forward"
                },
                "kraken2_db_path": {
                    "type": "string",
                    "description": "Kraken2 database path",
                    "format": "path",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "hic_options": {
            "title": "HiC options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "hic": {
                    "type": "string",
                    "description": "HiC reads path provided as a SRA ID or as paired reads such as 'hic_reads{1,2}.fastq.gz'",
                    "pattern": "^SR\\w+$|^\\S+\\{1,2\\}[\\w\\.]*\\.f(ast)?q\\.gz$",
                    "fa_icon": "fas fa-copy"
                },
                "hic_merge_assemblies": {
                    "type": "string",
                    "fa_icon": "fas fa-layer-group",
                    "description": "A space separated list of two or more assembly tags. The assemblies are merged on a single contact map.",
                    "pattern": "^(\\w+\\s)+\\w+$"
                },
                "hic_skip_fastp": {
                    "type": "boolean",
                    "description": "Skip HiC read trimming",
                    "fa_icon": "fas fa-forward"
                },
                "hic_skip_fastqc": {
                    "type": "boolean",
                    "description": "Skip HiC read QC",
                    "fa_icon": "fas fa-forward"
                },
                "hic_fastp_ext_args": {
                    "type": "string",
                    "default": "--qualified_quality_phred 20 --length_required 50",
                    "description": "Additional parameters for fastp trimming",
                    "fa_icon": "fas fa-terminal"
                },
                "hic_samtools_ext_args": {
                    "type": "string",
                    "default": "-F 3852",
                    "fa_icon": "fas fa-terminal",
                    "description": "Additional parameters for samtools view command run after samblaster"
                }
            }
        },
        "synteny_options": {
            "title": "Synteny options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "synteny_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip synteny analysis",
                    "fa_icon": "fas fa-forward"
                },
                "synteny_mummer_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip Mummer-based synteny analysis",
                    "fa_icon": "fas fa-forward"
                },
                "synteny_plotsr_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip plotsr-based synteny analysis",
                    "fa_icon": "fas fa-forward"
                },
                "synteny_xref_assemblies": {
                    "type": "string",
                    "description": "Reference assemblies for synteny analysis",
                    "format": "file-path",
                    "mimetype": "csv",
                    "schema": "assets/schema_xref_assemblies.json",
                    "fa_icon": "fas fa-file-csv"
                },
                "synteny_between_input_assemblies": {
                    "type": "boolean",
                    "description": "Create syntenic plots between each pair of input assemblies",
                    "default": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "synteny_mummer_plot_type": {
                    "type": "string",
                    "default": "both",
                    "description": "Synteny plot type from Mummer alignments: 'dotplot', 'circos', or 'both'",
                    "enum": ["both", "dotplot", "circos"],
                    "fa_icon": "fas fa-chart-line"
                },
                "synteny_mummer_m2m_align": {
                    "type": "boolean",
                    "description": "Include Mummer alignment blocks with many-to-many mappings",
                    "fa_icon": "fas fa-question-circle"
                },
                "synteny_mummer_max_gap": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "Mummer alignments within this distance are bundled together",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "synteny_mummer_min_bundle_size": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "After bundling, any Mummer alignment bundle smaller than this size is filtered out",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "synteny_plot_1_vs_all": {
                    "type": "boolean",
                    "description": "Create a separate synteny plot for each contig of the target assembly versus all contigs of the reference assembly. This only applies to Mummer plots",
                    "fa_icon": "fas fa-question-circle"
                },
                "synteny_color_by_contig": {
                    "type": "boolean",
                    "default": true,
                    "description": "Mummer synteny plots are colored by contig. Otherwise, they are colored by bundle size",
                    "fa_icon": "fas fa-question-circle"
                },
                "synteny_plotsr_seq_label": {
                    "type": "string",
                    "default": "Chr",
                    "description": "Sequence label prefix for plotsr synteny",
                    "fa_icon": "fas fa-tag"
                },
                "synteny_plotsr_assembly_order": {
                    "type": "string",
                    "fa_icon": "fas fa-sort-alpha-down",
                    "pattern": "^(\\w+\\s)*\\w+$",
                    "description": "The order in which the assemblies should be compared, provided as space separated string of assembly tags. If absent, assemblies are ordered by their tags alphabetically."
                }
            }
        },
        "merqury_options": {
            "title": "Merqury options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "merqury_skip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip merqury analysis",
                    "fa_icon": "fas fa-forward"
                },
                "merqury_kmer_length": {
                    "type": "integer",
                    "default": 21,
                    "description": "kmer length for merqury analysis",
                    "minimum": 3,
                    "fa_icon": "fas fa-ruler-horizontal"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/validation_options"
        },
        {
            "$ref": "#/$defs/general_stats_options"
        },
        {
            "$ref": "#/$defs/ncbi_fcs_options"
        },
        {
            "$ref": "#/$defs/busco_options"
        },
        {
            "$ref": "#/$defs/tidk_options"
        },
        {
            "$ref": "#/$defs/lai_options"
        },
        {
            "$ref": "#/$defs/kraken2_options"
        },
        {
            "$ref": "#/$defs/hic_options"
        },
        {
            "$ref": "#/$defs/synteny_options"
        },
        {
            "$ref": "#/$defs/merqury_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
